import{d as m,a as n,t as b}from"./disclose-version.Cp7DA_hC.js";import"./legacy.BiVEy3HN.js";import{s as e,f as k,c as o,r as l,a0 as i}from"./runtime.BJ_-nNzH.js";import{h as v}from"./html.CdE0Dczy.js";import{l as y,s as $}from"./props.CImQ9uag.js";import{P as x}from"./Page.COaFmdaj.js";import{L as _}from"./Link.F3PX8po0.js";const A={toc:[{level:2,title:"Animation",id:"animation"},{level:3,title:"child",id:"child"},{level:3,title:"options",id:"options"},{level:3,title:"Animation presets",id:"animation-presets"}]};var C=b('<h2 id="animation">Animation</h2> <p><code>animation</code> function allows to define a custom sliding animation.</p> <pre class="language-ts"><!></pre> <p>Functions receives 4 arguments:</p> <table><thead><tr><th align="left">Name</th><th align="left">Type</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left"><code>node</code></td><td align="left"><code>HTMLElement</code></td><td align="left"><code>slidy</code> instance root DOM node.</td></tr><tr><td align="left"><code>child</code></td><td align="left"><code>Child</code></td><td align="left">Extended <code>childNode</code> object.</td></tr><tr><td align="left"><code>options</code></td><td align="left"><code>Options</code></td><td align="left"><code>@slidy/core</code> options subset.</td></tr><tr><td align="left"><code>translate</code></td><td align="left"><code>string</code></td><td align="left">Basic translate required for any function <code>&#123; transform: translate &#125;</code></td></tr></tbody></table> <h3 id="child"><code>child</code></h3> <table><thead><tr><th align="left">Name</th><th align="left">Type</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left"><code>i</code></td><td align="left"><code>number</code></td><td align="left">Child index in array.</td></tr><tr><td align="left"><code>index</code></td><td align="left"><code>number</code></td><td align="left">Child index in core script.</td></tr><tr><td align="left"><code>active</code></td><td align="left"><code>number</code></td><td align="left">Calculated as <code>options.loop ? cix : options.index</code>.</td></tr><tr><td align="left"><code>size</code></td><td align="left"><code>number</code></td><td align="left">Calculated as <code>size + gap</code> by <code>options.vertical</code>.</td></tr><tr><td align="left"><code>dist</code></td><td align="left"><code>number</code></td><td align="left">Snap position distance.</td></tr><tr><td align="left"><code>track</code></td><td align="left"><code>number</code></td><td align="left">Move by slide size from its snap point in specified direction.</td></tr><tr><td align="left"><code>turn</code></td><td align="left"><code>number</code></td><td align="left">Calculated as <code>-1 &lt;- child.track / child.size -&gt; 1</code></td></tr><tr><td align="left"><code>exp</code></td><td align="left"><code>number</code></td><td align="left">Interpolated <code>child.track</code> as <code>0 &lt;- exp -&gt; 1</code>.</td></tr></tbody></table> <h3 id="options"><code>options</code></h3> <table><thead><tr><th align="left">Name</th><th align="left">Type</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left"><code>index</code></td><td align="left"><code>number</code></td><td align="left">Active slide index.</td></tr><tr><td align="left"><code>position</code></td><td align="left"><code>number</code></td><td align="left">Current position value.</td></tr><tr><td align="left"><code>vertical</code></td><td align="left"><code>number</code></td><td align="left">Children flow, calculated as <code>0</code> or any <code>Number</code> as <code>true</code>.</td></tr><tr><td align="left"><code>reverse</code></td><td align="left"><code>number</code></td><td align="left">The children reverse flow state: `-1</td></tr><tr><td align="left"><code>snap</code></td><td align="left"><code>Snap</code></td><td align="left">The <code>snap</code> position value: <code>"start", "center", "end", "deck", undefined</code>.</td></tr></tbody></table> <h3 id="animation-presets">Animation presets</h3> <p>Predefined custom animations are available as <!>.</p>',1);function E(s,c){const r=y(c,["children","$$slots","$$events","$$legacy"]);x(s,$(()=>r,A,{children:(p,T)=>{var d=C(),t=e(k(d),4),f=o(t);v(f,()=>`<code class="language-ts"><span class="token keyword">interface</span> <span class="token class-name">AnimationArgs</span> <span class="token punctuation">&#123;</span>
	node<span class="token operator">:</span> HTMLElement<span class="token punctuation">;</span>
  child<span class="token operator">:</span> Child<span class="token punctuation">;</span>
  options<span class="token operator">:</span> Options<span class="token punctuation">;</span>
  translate<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">type</span> <span class="token class-name">AnimationFunc</span> <span class="token operator">=</span> <span class="token punctuation">(</span>args<span class="token operator">:</span> AnimationArgs<span class="token punctuation">)</span> <span class="token operator">=></span> CSSStyleDeclaration<span class="token punctuation">;</span></code>`),l(t);var a=e(t,16),g=e(o(a));_(g,{href:"https://github.com/Valexr/Slidy/tree/master/packages/easing",rel:"nofollow",children:(h,w)=>{i();var u=m("separate package");n(h,u)},$$slots:{default:!0}}),i(),l(a),n(p,d)},$$slots:{default:!0}}))}export{E as default,A as metadata};
