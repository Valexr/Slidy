import{t as l,b as a}from"./D8NRNh33.js";import"./6FmMA93Z.js";import{a0 as i}from"./BGpqryMg.js";import{l as r,s}from"./qD7QkK3B.js";import{P as g}from"./3ddC8FdC.js";const e={toc:[{level:2,title:"Slidy Component",id:"slidy-component"},{level:3,title:"Slidy Component API",id:"slidy-component-api"}]},{toc:v}=e;var p=l('<h2 id="slidy-component">Slidy Component</h2> <p><code>&lt;Slidy /&gt;</code> component uses <code>&lt;Core /&gt;</code> internally and provides more features expected from carousel.</p> <h3 id="slidy-component-api">Slidy Component API</h3> <p>The <code>&lt;Slidy /&gt;</code> component interface extends the <code>&lt;Core /&gt;</code>. There are a list of additional options available:</p> <table><thead><tr><th align="left">Property</th><th align="center">Default</th><th align="center">Type</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left"><code>arrows</code></td><td align="center"><code>true</code></td><td align="center"><code>boolean</code></td><td align="left">Renders the arrow button controls for accessible slide navigation.</td></tr><tr><td align="left"><code>background</code></td><td align="center"><code>false</code></td><td align="center"><code>boolean</code></td><td align="left">Sets <code>background-image</code> instead of <code>&lt;img /&gt;</code> elements to display slides.</td></tr><tr><td align="left"><code>classNames</code></td><td align="center"><code>SlidyStyles</code></td><td align="center"><code>SlidyStylesDefault</code></td><td align="left">The class names object used over the component.</td></tr><tr><td align="left"><code>getImgSrc</code></td><td align="center"><code>item =&gt; item.src</code></td><td align="center"><code>function</code></td><td align="left">The slide’s <code>src</code> attribute getter.</td></tr><tr><td align="left"><code>getThumbSrc</code></td><td align="center"><code>item =&gt; item.src</code></td><td align="center"><code>function</code></td><td align="left">The thumbnail’s <code>src</code> attribute getter.</td></tr><tr><td align="left"><code>navigation</code></td><td align="center"><code>false</code></td><td align="center"><code>boolean</code></td><td align="left">Renders the navigation controls for pagination-like slide navigation.</td></tr><tr><td align="left"><code>progress</code></td><td align="center"><code>false</code></td><td align="center"><code>boolean</code></td><td align="left">Renders the progress bar.</td></tr><tr><td align="left"><code>slides</code></td><td align="center"><code>[]</code></td><td align="center"><code>Slides[]</code></td><td align="left">An array of objects with image metadata.</td></tr><tr><td align="left"><code>thumbnail</code></td><td align="center"><code>false</code></td><td align="center"><code>boolean</code></td><td align="left">Renders the thumbnail navigation panel.</td></tr></tbody></table> <p>By default component works with images. Image object should contain <code>width</code> and <code>height</code> attributes to prevent layout shifts and <code>alt</code> for accessibility.</p>',1);function S(t,d){const o=r(d,["children","$$slots","$$events","$$legacy"]);g(t,s(()=>o,e,{children:(n,f)=>{var c=p();i(10),a(n,c)},$$slots:{default:!0}}))}export{S as default,e as metadata};
