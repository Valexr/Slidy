import{S as Ga,i as Ia,s as Ja,C as Jn,w as Ma,x as Ua,y as ja,z as Ka,A as Qa,f as Ba,t as Na,B as Sa,V as qa,l as a,r as o,a as d,m as e,n as s,u as l,h as n,c as i,p as r,b as H,F as t,E as Wa}from"./index-2e946c61.js";import{P as Xa}from"./Page-fc949d61.js";import{L as Za}from"./Link-0438ac1f.js";import"./masthead.module-e6e6db0b.js";function te(F){let c,_;return{c(){c=a("code"),_=o("destroy()")},l(g){c=e(g,"CODE",{});var f=s(c);_=l(f,"destroy()"),f.forEach(n)},m(g,f){H(g,c,f),t(c,_)},p:Wa,d(g){g&&n(c)}}}function ne(F){let c,_,g,f,u,h,y,Mt,Ut,j,jt,Bt,B,Nt,St,k,T,N,ut,Vt,Yt,S,ft,Gt,It,R,Jt,kt,Kt,Qt,Wt,O,V,gt,Xt,Zt,Y,ht,tn,nn,L,an,_t,en,sn,x,G,Et,on,ln,I,vt,cn,pn,J,rn,dn,C,K,mt,un,fn,Q,Dt,kn,gn,P,hn,yt,_n,En,w,W,Tt,vn,mn,X,Ot,Dn,yn,E,Tn,xt,On,xn,Ct,Cn,wn,wt,$n,bn,$t,Fn,Rn,An,$,Z,bt,zn,Hn,tt,Ft,Ln,Pn,nt,qn,Mn,b,at,Rt,Un,jn,et,At,Bn,Nn,A,Sn,z,Vn,zt,q,Yn,Ht,M,Va=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>module<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
        <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> slidy <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'https://unpkg.com/@slidy/core/dist/index.mjs'</span><span class="token punctuation">;</span>

        <span class="token function">slidy</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span>

        node<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mount'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span>

        node<span class="token punctuation">.</span><span class="token function-variable function">onupdate</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>detail<span class="token punctuation">)</span>

        <span class="token keyword">function</span> <span class="token function">onMove</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> index<span class="token punctuation">,</span> position <span class="token punctuation">&#125;</span> <span class="token operator">=</span> e<span class="token punctuation">.</span>detail
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> position<span class="token punctuation">)</span>
        <span class="token punctuation">&#125;</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>node<span class="token punctuation">"</span></span> <span class="token attr-name">onmove</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>onMove<span class="token punctuation">"</span></span> <span class="token attr-name">tabindex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
        ...
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span></code>`,Lt;return z=new Za({props:{href:"#methods",$$slots:{default:[te]},$$scope:{ctx:F}}}),{c(){c=a("h2"),_=o("Events"),g=d(),f=a("table"),u=a("thead"),h=a("tr"),y=a("th"),Mt=o("Name"),Ut=d(),j=a("th"),jt=o("Detail"),Bt=d(),B=a("th"),Nt=o("Description"),St=d(),k=a("tbody"),T=a("tr"),N=a("td"),ut=a("code"),Vt=o("mount"),Yt=d(),S=a("td"),ft=a("code"),Gt=o("{options}"),It=d(),R=a("td"),Jt=o("Fires when "),kt=a("code"),Kt=o("node.children.length"),Qt=o(" & node.children isConnected"),Wt=d(),O=a("tr"),V=a("td"),gt=a("code"),Xt=o("resize"),Zt=d(),Y=a("td"),ht=a("code"),tn=o("{ROE}"),nn=d(),L=a("td"),an=o("Fires on resize target node "),_t=a("code"),en=o("ROE: ResizeObserverEntry[]"),sn=d(),x=a("tr"),G=a("td"),Et=a("code"),on=o("move"),ln=d(),I=a("td"),vt=a("code"),cn=o("{index,position}"),pn=d(),J=a("td"),rn=o("Fires on any sliding"),dn=d(),C=a("tr"),K=a("td"),mt=a("code"),un=o("index"),fn=d(),Q=a("td"),Dt=a("code"),kn=o("{index}"),gn=d(),P=a("td"),hn=o("Fires on each index change: "),yt=a("code"),_n=o("index === changed.index"),En=d(),w=a("tr"),W=a("td"),Tt=a("code"),vn=o("keys"),mn=d(),X=a("td"),Ot=a("code"),Dn=o("{e.key}"),yn=d(),E=a("td"),Tn=o("Fires if target node focusing and any key pressed. Predefined keys: "),xt=a("code"),On=o("['ArrowLeft', 'ArrowRight', 'ArrowUp', 'ArrowDown']"),xn=o(" is "),Ct=a("code"),Cn=o("defaultPrevented"),wn=o(" & navigate "),wt=a("code"),$n=o("to(index + options.clamp)"),bn=o(". Focus not in core & can do programaticaly or with "),$t=a("code"),Fn=o("tabindex"),Rn=o(" attribute on target node."),An=d(),$=a("tr"),Z=a("td"),bt=a("code"),zn=o("update"),Hn=d(),tt=a("td"),Ft=a("code"),Ln=o("{updated.options}"),Pn=d(),nt=a("td"),qn=o("Fires on each options update"),Mn=d(),b=a("tr"),at=a("td"),Rt=a("code"),Un=o("destroy"),jn=d(),et=a("td"),At=a("code"),Bn=o("{node}"),Nn=d(),A=a("td"),Sn=o("Fires when "),Ma(z.$$.fragment),Vn=o(" is done or before target node unmounted from the DOM"),zt=d(),q=a("h3"),Yn=o("Usage"),Ht=d(),M=a("pre"),this.h()},l(p){c=e(p,"H2",{id:!0});var m=s(c);_=l(m,"Events"),m.forEach(n),g=i(p),f=e(p,"TABLE",{});var U=s(f);u=e(U,"THEAD",{});var Kn=s(u);h=e(Kn,"TR",{});var st=s(h);y=e(st,"TH",{align:!0});var Qn=s(y);Mt=l(Qn,"Name"),Qn.forEach(n),Ut=i(st),j=e(st,"TH",{align:!0});var Wn=s(j);jt=l(Wn,"Detail"),Wn.forEach(n),Bt=i(st),B=e(st,"TH",{align:!0});var Xn=s(B);Nt=l(Xn,"Description"),Xn.forEach(n),st.forEach(n),Kn.forEach(n),St=i(U),k=e(U,"TBODY",{});var v=s(k);T=e(v,"TR",{});var ot=s(T);N=e(ot,"TD",{align:!0});var Zn=s(N);ut=e(Zn,"CODE",{});var ta=s(ut);Vt=l(ta,"mount"),ta.forEach(n),Zn.forEach(n),Yt=i(ot),S=e(ot,"TD",{align:!0});var na=s(S);ft=e(na,"CODE",{});var aa=s(ft);Gt=l(aa,"{options}"),aa.forEach(n),na.forEach(n),It=i(ot),R=e(ot,"TD",{align:!0});var Pt=s(R);Jt=l(Pt,"Fires when "),kt=e(Pt,"CODE",{});var ea=s(kt);Kt=l(ea,"node.children.length"),ea.forEach(n),Qt=l(Pt," & node.children isConnected"),Pt.forEach(n),ot.forEach(n),Wt=i(v),O=e(v,"TR",{});var lt=s(O);V=e(lt,"TD",{align:!0});var sa=s(V);gt=e(sa,"CODE",{});var oa=s(gt);Xt=l(oa,"resize"),oa.forEach(n),sa.forEach(n),Zt=i(lt),Y=e(lt,"TD",{align:!0});var la=s(Y);ht=e(la,"CODE",{});var ca=s(ht);tn=l(ca,"{ROE}"),ca.forEach(n),la.forEach(n),nn=i(lt),L=e(lt,"TD",{align:!0});var Gn=s(L);an=l(Gn,"Fires on resize target node "),_t=e(Gn,"CODE",{});var pa=s(_t);en=l(pa,"ROE: ResizeObserverEntry[]"),pa.forEach(n),Gn.forEach(n),lt.forEach(n),sn=i(v),x=e(v,"TR",{});var ct=s(x);G=e(ct,"TD",{align:!0});var ra=s(G);Et=e(ra,"CODE",{});var da=s(Et);on=l(da,"move"),da.forEach(n),ra.forEach(n),ln=i(ct),I=e(ct,"TD",{align:!0});var ia=s(I);vt=e(ia,"CODE",{});var ua=s(vt);cn=l(ua,"{index,position}"),ua.forEach(n),ia.forEach(n),pn=i(ct),J=e(ct,"TD",{align:!0});var fa=s(J);rn=l(fa,"Fires on any sliding"),fa.forEach(n),ct.forEach(n),dn=i(v),C=e(v,"TR",{});var pt=s(C);K=e(pt,"TD",{align:!0});var ka=s(K);mt=e(ka,"CODE",{});var ga=s(mt);un=l(ga,"index"),ga.forEach(n),ka.forEach(n),fn=i(pt),Q=e(pt,"TD",{align:!0});var ha=s(Q);Dt=e(ha,"CODE",{});var _a=s(Dt);kn=l(_a,"{index}"),_a.forEach(n),ha.forEach(n),gn=i(pt),P=e(pt,"TD",{align:!0});var In=s(P);hn=l(In,"Fires on each index change: "),yt=e(In,"CODE",{});var Ea=s(yt);_n=l(Ea,"index === changed.index"),Ea.forEach(n),In.forEach(n),pt.forEach(n),En=i(v),w=e(v,"TR",{});var rt=s(w);W=e(rt,"TD",{align:!0});var va=s(W);Tt=e(va,"CODE",{});var ma=s(Tt);vn=l(ma,"keys"),ma.forEach(n),va.forEach(n),mn=i(rt),X=e(rt,"TD",{align:!0});var Da=s(X);Ot=e(Da,"CODE",{});var ya=s(Ot);Dn=l(ya,"{e.key}"),ya.forEach(n),Da.forEach(n),yn=i(rt),E=e(rt,"TD",{align:!0});var D=s(E);Tn=l(D,"Fires if target node focusing and any key pressed. Predefined keys: "),xt=e(D,"CODE",{});var Ta=s(xt);On=l(Ta,"['ArrowLeft', 'ArrowRight', 'ArrowUp', 'ArrowDown']"),Ta.forEach(n),xn=l(D," is "),Ct=e(D,"CODE",{});var Oa=s(Ct);Cn=l(Oa,"defaultPrevented"),Oa.forEach(n),wn=l(D," & navigate "),wt=e(D,"CODE",{});var xa=s(wt);$n=l(xa,"to(index + options.clamp)"),xa.forEach(n),bn=l(D,". Focus not in core & can do programaticaly or with "),$t=e(D,"CODE",{});var Ca=s($t);Fn=l(Ca,"tabindex"),Ca.forEach(n),Rn=l(D," attribute on target node."),D.forEach(n),rt.forEach(n),An=i(v),$=e(v,"TR",{});var dt=s($);Z=e(dt,"TD",{align:!0});var wa=s(Z);bt=e(wa,"CODE",{});var $a=s(bt);zn=l($a,"update"),$a.forEach(n),wa.forEach(n),Hn=i(dt),tt=e(dt,"TD",{align:!0});var ba=s(tt);Ft=e(ba,"CODE",{});var Fa=s(Ft);Ln=l(Fa,"{updated.options}"),Fa.forEach(n),ba.forEach(n),Pn=i(dt),nt=e(dt,"TD",{align:!0});var Ra=s(nt);qn=l(Ra,"Fires on each options update"),Ra.forEach(n),dt.forEach(n),Mn=i(v),b=e(v,"TR",{});var it=s(b);at=e(it,"TD",{align:!0});var Aa=s(at);Rt=e(Aa,"CODE",{});var za=s(Rt);Un=l(za,"destroy"),za.forEach(n),Aa.forEach(n),jn=i(it),et=e(it,"TD",{align:!0});var Ha=s(et);At=e(Ha,"CODE",{});var La=s(At);Bn=l(La,"{node}"),La.forEach(n),Ha.forEach(n),Nn=i(it),A=e(it,"TD",{align:!0});var qt=s(A);Sn=l(qt,"Fires when "),Ua(z.$$.fragment,qt),Vn=l(qt," is done or before target node unmounted from the DOM"),qt.forEach(n),it.forEach(n),v.forEach(n),U.forEach(n),zt=i(p),q=e(p,"H3",{id:!0});var Pa=s(q);Yn=l(Pa,"Usage"),Pa.forEach(n),Ht=i(p),M=e(p,"PRE",{class:!0});var Ya=s(M);Ya.forEach(n),this.h()},h(){r(c,"id","events"),r(y,"align","left"),r(j,"align","left"),r(B,"align","left"),r(N,"align","left"),r(S,"align","left"),r(R,"align","left"),r(V,"align","left"),r(Y,"align","left"),r(L,"align","left"),r(G,"align","left"),r(I,"align","left"),r(J,"align","left"),r(K,"align","left"),r(Q,"align","left"),r(P,"align","left"),r(W,"align","left"),r(X,"align","left"),r(E,"align","left"),r(Z,"align","left"),r(tt,"align","left"),r(nt,"align","left"),r(at,"align","left"),r(et,"align","left"),r(A,"align","left"),r(q,"id","usage"),r(M,"class","language-html")},m(p,m){H(p,c,m),t(c,_),H(p,g,m),H(p,f,m),t(f,u),t(u,h),t(h,y),t(y,Mt),t(h,Ut),t(h,j),t(j,jt),t(h,Bt),t(h,B),t(B,Nt),t(f,St),t(f,k),t(k,T),t(T,N),t(N,ut),t(ut,Vt),t(T,Yt),t(T,S),t(S,ft),t(ft,Gt),t(T,It),t(T,R),t(R,Jt),t(R,kt),t(kt,Kt),t(R,Qt),t(k,Wt),t(k,O),t(O,V),t(V,gt),t(gt,Xt),t(O,Zt),t(O,Y),t(Y,ht),t(ht,tn),t(O,nn),t(O,L),t(L,an),t(L,_t),t(_t,en),t(k,sn),t(k,x),t(x,G),t(G,Et),t(Et,on),t(x,ln),t(x,I),t(I,vt),t(vt,cn),t(x,pn),t(x,J),t(J,rn),t(k,dn),t(k,C),t(C,K),t(K,mt),t(mt,un),t(C,fn),t(C,Q),t(Q,Dt),t(Dt,kn),t(C,gn),t(C,P),t(P,hn),t(P,yt),t(yt,_n),t(k,En),t(k,w),t(w,W),t(W,Tt),t(Tt,vn),t(w,mn),t(w,X),t(X,Ot),t(Ot,Dn),t(w,yn),t(w,E),t(E,Tn),t(E,xt),t(xt,On),t(E,xn),t(E,Ct),t(Ct,Cn),t(E,wn),t(E,wt),t(wt,$n),t(E,bn),t(E,$t),t($t,Fn),t(E,Rn),t(k,An),t(k,$),t($,Z),t(Z,bt),t(bt,zn),t($,Hn),t($,tt),t(tt,Ft),t(Ft,Ln),t($,Pn),t($,nt),t(nt,qn),t(k,Mn),t(k,b),t(b,at),t(at,Rt),t(Rt,Un),t(b,jn),t(b,et),t(et,At),t(At,Bn),t(b,Nn),t(b,A),t(A,Sn),ja(z,A,null),t(A,Vn),H(p,zt,m),H(p,q,m),t(q,Yn),H(p,Ht,m),H(p,M,m),M.innerHTML=Va,Lt=!0},p(p,m){const U={};m&2&&(U.$$scope={dirty:m,ctx:p}),z.$set(U)},i(p){Lt||(Ba(z.$$.fragment,p),Lt=!0)},o(p){Na(z.$$.fragment,p),Lt=!1},d(p){p&&n(c),p&&n(g),p&&n(f),Sa(z),p&&n(zt),p&&n(q),p&&n(Ht),p&&n(M)}}}function ae(F){let c,_;const g=[F[0]];let f={$$slots:{default:[ne]},$$scope:{ctx:F}};for(let u=0;u<g.length;u+=1)f=Jn(f,g[u]);return c=new Xa({props:f}),{c(){Ma(c.$$.fragment)},l(u){Ua(c.$$.fragment,u)},m(u,h){ja(c,u,h),_=!0},p(u,[h]){const y=h&1?Ka(g,[Qa(u[0])]):{};h&2&&(y.$$scope={dirty:h,ctx:u}),c.$set(y)},i(u){_||(Ba(c.$$.fragment,u),_=!0)},o(u){Na(c.$$.fragment,u),_=!1},d(u){Sa(c,u)}}}function ee(F,c,_){return F.$$set=g=>{_(0,c=Jn(Jn({},c),qa(g)))},c=qa(c),[c]}class pe extends Ga{constructor(c){super(),Ia(this,c,ee,ae,Ja,{})}}export{pe as default};
