import{d as f,a as i,t as C}from"./disclose-version.DQaQaVQa.js";import"./legacy.BwW9_4P5.js";import{s as t,f as P,c as n,a0 as s,r as a}from"./runtime.CNq3RIe6.js";import{h as S}from"./html.XbZZdxSk.js";import{l as D,s as T}from"./props.DjB9TJkj.js";import{P as q}from"./Page.HutpAHYc.js";import{L as m}from"./Link.MVXFpPo6.js";const A={toc:[{level:2,title:"API",id:"api"},{level:3,title:"Options",id:"options"},{level:3,title:"Readonly properties",id:"readonly-properties"},{level:3,title:"Flow",id:"flow"},{level:3,title:"Usage example",id:"usage-example"}]};var F=C('<h2 id="api">API</h2> <p><code>slidy</code> have two arguments: required <code>node</code> and optional <code>options</code>.</p> <h3 id="options">Options</h3> <table><thead><tr><th align="left">Key</th><th align="center">Default</th><th align="left">Type</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left"><code>index</code></td><td align="center">0</td><td align="left">number</td><td align="left">The starting index on render.</td></tr><tr><td align="left"><code>clamp</code></td><td align="center">0</td><td align="left">number</td><td align="left">Defines the step in number of slides to slide on.</td></tr><tr><td align="left"><code>indent</code></td><td align="center">1</td><td align="left">number</td><td align="left">Creates an indent at the edges. The value is calculated from the gap: <code>gap * indent</code></td></tr><tr><td align="left"><code>sensity</code></td><td align="center">5</td><td align="left">number</td><td align="left">Defines sensite as the pixels required to drag in order to start move, <code>0</code> when sliding.</td></tr><tr><td align="left"><code>gravity</code></td><td align="center">1.2</td><td align="left">number</td><td align="left">Controls the gravity value <code>0 (space) : 1 (earth) : 2 (underground)</code>.</td></tr><tr><td align="left"><code>duration</code></td><td align="center">375</td><td align="left">number</td><td align="left">Sliding duration in ms.</td></tr><tr><td align="left"><code>animation</code></td><td align="center">undefined</td><td align="left">AnimationFunc</td><td align="left">Custom sliding animation. Predefined sets are available via <!>.</td></tr><tr><td align="left"><code>easing</code></td><td align="center">undefined</td><td align="left"><code>(t: number) =&gt; number</code></td><td align="left">Sliding easing behaviour. Predefined sets are available vie <!>.</td></tr><tr><td align="left"><code>snap</code></td><td align="center">undefined</td><td align="left">string</td><td align="left">Defines an area to “snap” the slide: <code>"start", "center", "end", "deck", undefined</code>. By default the behaviour is clamp sliding by edges.</td></tr><tr><td align="left"><code>axis</code></td><td align="center">undefined</td><td align="left"><code>"x"</code> or <code>"y"</code></td><td align="left">Defines the flow direction.</td></tr><tr><td align="left"><code>loop</code></td><td align="center">false</td><td align="left">boolean</td><td align="left">Activated the infinite sliding mode.</td></tr></tbody></table> <h3 id="readonly-properties">Readonly properties</h3> <table><thead><tr><th align="left">Key</th><th align="left">Type</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left"><code>position</code></td><td align="left"><code>number</code></td><td align="left">Current position</td></tr><tr><td align="left"><code>direction</code></td><td align="left"><code>number</code></td><td align="left">Children move direction</td></tr><tr><td align="left"><code>vertical</code></td><td align="left"><code>number</code></td><td align="left">Children axis flow: <code>0</code> or any <code>Number</code> as <code>true</code></td></tr><tr><td align="left"><code>reverse</code></td><td align="left"><code>number</code></td><td align="left">Children reverse flow: <code>-1</code> or <code>1</code></td></tr></tbody></table> <h3 id="flow">Flow</h3> <p>To control the flow direction use one of the options on the parent node:</p> <ul><li><code>flex-flow: row-reverse | column-reverse</code> CSS property;</li> <li><code>direction: rtl</code> CSS property;</li> <li><code>dir="rtl"</code> HTML attribute.</li></ul> <p>To use <code>deck</code> flow use the <code>snap: "deck"</code> option, it may be required for some animations.</p> <h3 id="usage-example">Usage example</h3> <pre class="language-html"><!></pre>',1);function z(h,y){const v=D(y,["children","$$slots","$$events","$$legacy"]);q(h,T(()=>v,A,{children:(b,L)=>{var r=F(),e=t(P(r),6),d=t(n(e)),o=t(n(d),6),c=t(n(o),3),w=t(n(c));m(w,{href:"https://github.com/Valexr/Slidy/tree/master/packages/animation",rel:"nofollow",children:(p,_)=>{s();var l=f("@slidy/animation");i(p,l)},$$slots:{default:!0}}),s(),a(c),a(o);var u=t(o),k=t(n(u),3),x=t(n(k));m(x,{href:"https://github.com/Valexr/Slidy/tree/master/packages/easing",rel:"nofollow",children:(p,_)=>{s();var l=f("@slidy/easing");i(p,l)},$$slots:{default:!0}}),s(),a(k),a(u),s(3),a(d),a(e);var g=t(e,16),$=n(g);S($,()=>`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>module<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
        <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> slidy <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@slidy/core'</span><span class="token punctuation">;</span><span class="token punctuation">;</span>
        <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> linear <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@slidy/easing'</span><span class="token punctuation">;</span>
        <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> fade <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@slidy/animation'</span><span class="token punctuation">;</span>

        <span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
            <span class="token literal-property property">index</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token literal-property property">clamp</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token literal-property property">indent</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token literal-property property">sensity</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
            <span class="token literal-property property">gravity</span><span class="token operator">:</span> <span class="token number">1.2</span><span class="token punctuation">,</span>
            <span class="token literal-property property">duration</span><span class="token operator">:</span> <span class="token number">375</span><span class="token punctuation">,</span>
            <span class="token literal-property property">animation</span><span class="token operator">:</span> fade<span class="token punctuation">,</span>
            <span class="token literal-property property">easing</span><span class="token operator">:</span> linear<span class="token punctuation">,</span>
            <span class="token literal-property property">snap</span><span class="token operator">:</span> <span class="token string">'center'</span><span class="token punctuation">,</span>
            <span class="token literal-property property">axis</span><span class="token operator">:</span> <span class="token string">'x'</span><span class="token punctuation">,</span>
            <span class="token literal-property property">loop</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
        
        <span class="token keyword">const</span> node <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"#node"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">slidy</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>node<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token comment">&lt;!-- items --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span></code>`),a(g),i(b,r)},$$slots:{default:!0}}))}export{z as default,A as metadata};
