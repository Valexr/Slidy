import{s as k,l as S,d as i,n as A,i as c,m as M,c as p,o as h,g as v,h as _,j as b,q as P}from"./scheduler.CHYfDSvP.js";import{S as I,i as R,d as D,a as q,t as B,m as E,c as N,b as z}from"./index.CNaes6TE.js";import{g as F,a as j}from"./spread.CgU5AtxT.js";import{P as G}from"./Page.FUkGPQvN.js";function J(u){let t,r="Slidy Component",s,o,d="<code>&lt;Slidy /&gt;</code> component uses <code>&lt;Core /&gt;</code> internally and provides more features expected from carousel.",n,l,H="Slidy Component API",y,g,w="The <code>&lt;Slidy /&gt;</code> component interface extends the <code>&lt;Core /&gt;</code>. There are a list of additional options available:",x,f,L='<thead><tr><th align="left">Property</th> <th align="center">Default</th> <th align="center">Type</th> <th align="left">Description</th></tr></thead> <tbody><tr><td align="left"><code>arrows</code></td> <td align="center"><code>true</code></td> <td align="center"><code>boolean</code></td> <td align="left">Renders the arrow button controls for accessible slide navigation.</td></tr> <tr><td align="left"><code>background</code></td> <td align="center"><code>false</code></td> <td align="center"><code>boolean</code></td> <td align="left">Sets <code>background-image</code> instead of <code>&lt;img /&gt;</code> elements to display slides.</td></tr> <tr><td align="left"><code>classNames</code></td> <td align="center"><code>SlidyStyles</code></td> <td align="center"><code>SlidyStylesDefault</code></td> <td align="left">The class names object used over the component.</td></tr> <tr><td align="left"><code>getImgSrc</code></td> <td align="center"><code>item =&gt; item.src</code></td> <td align="center"><code>function</code></td> <td align="left">The slide’s <code>src</code> attribute getter.</td></tr> <tr><td align="left"><code>getThumbSrc</code></td> <td align="center"><code>item =&gt; item.src</code></td> <td align="center"><code>function</code></td> <td align="left">The thumbnail’s <code>src</code> attribute getter.</td></tr> <tr><td align="left"><code>navigation</code></td> <td align="center"><code>false</code></td> <td align="center"><code>boolean</code></td> <td align="left">Renders the navigation controls for pagination-like slide navigation.</td></tr> <tr><td align="left"><code>progress</code></td> <td align="center"><code>false</code></td> <td align="center"><code>boolean</code></td> <td align="left">Renders the progress bar.</td></tr> <tr><td align="left"><code>slides</code></td> <td align="center"><code>[]</code></td> <td align="center"><code>Slides[]</code></td> <td align="left">An array of objects with image metadata.</td></tr> <tr><td align="left"><code>thumbnail</code></td> <td align="center"><code>false</code></td> <td align="center"><code>boolean</code></td> <td align="left">Renders the thumbnail navigation panel.</td></tr></tbody>',C,m,$="By default component works with images. Image object should contain <code>width</code> and <code>height</code> attributes to prevent layout shifts and <code>alt</code> for accessibility.";return{c(){t=_("h2"),t.textContent=r,s=b(),o=_("p"),o.innerHTML=d,n=b(),l=_("h3"),l.textContent=H,y=b(),g=_("p"),g.innerHTML=w,x=b(),f=_("table"),f.innerHTML=L,C=b(),m=_("p"),m.innerHTML=$,this.h()},l(e){t=p(e,"H2",{id:!0,"data-svelte-h":!0}),h(t)!=="svelte-bnotat"&&(t.textContent=r),s=v(e),o=p(e,"P",{"data-svelte-h":!0}),h(o)!=="svelte-11y6808"&&(o.innerHTML=d),n=v(e),l=p(e,"H3",{id:!0,"data-svelte-h":!0}),h(l)!=="svelte-1hwweoc"&&(l.textContent=H),y=v(e),g=p(e,"P",{"data-svelte-h":!0}),h(g)!=="svelte-26l285"&&(g.innerHTML=w),x=v(e),f=p(e,"TABLE",{"data-svelte-h":!0}),h(f)!=="svelte-rmsheh"&&(f.innerHTML=L),C=v(e),m=p(e,"P",{"data-svelte-h":!0}),h(m)!=="svelte-vjm54n"&&(m.innerHTML=$),this.h()},h(){M(t,"id","slidy-component"),M(l,"id","slidy-component-api")},m(e,a){c(e,t,a),c(e,s,a),c(e,o,a),c(e,n,a),c(e,l,a),c(e,y,a),c(e,g,a),c(e,x,a),c(e,f,a),c(e,C,a),c(e,m,a)},p:A,d(e){e&&(i(t),i(s),i(o),i(n),i(l),i(y),i(g),i(x),i(f),i(C),i(m))}}}function K(u){let t,r;const s=[u[0],T];let o={$$slots:{default:[J]},$$scope:{ctx:u}};for(let d=0;d<s.length;d+=1)o=S(o,s[d]);return t=new G({props:o}),{c(){z(t.$$.fragment)},l(d){N(t.$$.fragment,d)},m(d,n){E(t,d,n),r=!0},p(d,[n]){const l=n&1?F(s,[n&1&&j(d[0]),n&0&&j(T)]):{};n&2&&(l.$$scope={dirty:n,ctx:d}),t.$set(l)},i(d){r||(B(t.$$.fragment,d),r=!0)},o(d){q(t.$$.fragment,d),r=!1},d(d){D(t,d)}}}const T={toc:[{level:2,title:"Slidy Component",id:"slidy-component"},{level:3,title:"Slidy Component API",id:"slidy-component-api"}]},{toc:X}=T;function O(u,t,r){return u.$$set=s=>{r(0,t=S(S({},t),P(s)))},t=P(t),[t]}class Y extends I{constructor(t){super(),R(this,t,O,K,k,{})}}export{Y as default,T as metadata};
