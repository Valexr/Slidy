import{S as Cs,i as js,s as Ms,C as os,w as Os,x as As,y as Hs,z as Is,A as fs,f as Js,t as $s,B as Ps,V as _s,l as r,r as l,a as g,m as u,n as k,u as c,h as a,c as y,p as h,b as o,F as t,E as Ds}from"./index-a4e35989.js";import{P as Fs}from"./Page-0e14739b.js";import"./masthead.module-88889344.js";function Ls(M){let n,d,f,i,e,m,O,B,H,N,V,I,G,K,D,_,Q,J,X,Y,$,Z,ss,F,w,gs=`<code class="language-ts"><span class="token keyword">type</span> <span class="token class-name">Options</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
    index<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token comment">// current active slide index</span>
    position<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token comment">// current position</span>
    vertical<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span> <span class="token comment">// node children flow</span>
    reverse<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span> <span class="token comment">// node children reverse flow</span>
    snap<span class="token operator">:</span> Snap<span class="token punctuation">;</span> <span class="token comment">// snapping side</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">type</span> <span class="token class-name">Snap</span> <span class="token operator">=</span> <span class="token string">'start'</span> <span class="token operator">|</span> <span class="token string">'center'</span> <span class="token operator">|</span> <span class="token string">'end'</span> <span class="token operator">|</span> <span class="token string">'deck'</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">Child</span> <span class="token keyword">extends</span> <span class="token class-name">HTMLElement</span> <span class="token punctuation">&#123;</span>
    i<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token comment">// child index in array</span>
    index<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token comment">// child index</span>
    active<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token comment">// &#96;options.loop ? cix : options.index&#96;</span>
    size<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token comment">// &#96;size + gap&#96; by axis</span>
    dist<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token comment">// distance to snap position</span>
    track<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token comment">// move to the size of the slide from its snap point +/- in the direction</span>
    turn<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token comment">// &#96;-1 &lt;- child.track / child.size -> 1&#96;</span>
    exp<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token comment">// interpolated child.track &#96;0 &lt;- exp -> 1&#96;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">type</span> <span class="token class-name">AnimationArgs</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
    node<span class="token operator">:</span> HTMLElement<span class="token punctuation">;</span> <span class="token comment">// target slidy node</span>
    child<span class="token operator">:</span> Child<span class="token punctuation">;</span> <span class="token comment">// extended childNode object</span>
    options<span class="token operator">:</span> Options<span class="token punctuation">;</span> <span class="token comment">// options: index, position, vertical, reverse, snap</span>
    translate<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> <span class="token comment">// basic translate needed in any function &#96;&#123; transform: translate &#125;&#96;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">AnimationFunc</span> <span class="token operator">=</span> <span class="token punctuation">(</span>args<span class="token operator">:</span> AnimationArgs<span class="token punctuation">)</span> <span class="token operator">=></span> CSSStyleDeclaration<span class="token punctuation">;</span></code>`,L,E,as,T,x,ys=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>module<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
        <span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> animation <span class="token keyword">from</span> <span class="token string">'https://unpkg.com/@slidy/animation/dist/index.mjs'</span><span class="token punctuation">;</span> <span class="token comment">// MJS module</span>
        <span class="token comment">// OR</span>
        <span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> animation <span class="token keyword">from</span> <span class="token string">'https://unpkg.com/@slidy/animation/dist/index.cjs'</span><span class="token punctuation">;</span> <span class="token comment">// CJS module</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></code>`,z,v,ns,P,ts,ps,R,S,bs=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://unpkg.com/@slidy/animation<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
    window<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> animation <span class="token operator">=</span> Slidy<span class="token punctuation">.</span><span class="token function">matrix</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code>`,W,C,es,q,j,hs=`<code class="language-svelte"><span class="token comment">&lt;!-- Svelte --></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> fade <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@slidy/animation'</span><span class="token punctuation">;</span>

    <span class="token operator">&lt;</span>Slidy animation<span class="token operator">=</span><span class="token punctuation">&#123;</span>fade<span class="token punctuation">&#125;</span> <span class="token operator">/</span><span class="token operator">></span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code>`;return{c(){n=r("h2"),d=l("Usage"),f=g(),i=r("p"),e=l("Animation functions available via named import as "),m=r("code"),O=l("MJS/CJS"),B=l(" module or via global "),H=r("code"),N=l("Window.Slidy"),V=l(" object props as "),I=r("code"),G=l("IIFE"),K=l("."),D=g(),_=r("p"),Q=l("Includes "),J=r("code"),X=l("fade, flip, matrix, rotate, scale, stairs, translate"),Y=l(" & "),$=r("code"),Z=l("blur, deck, shuffle"),ss=l(" in progress as functions."),F=g(),w=r("pre"),L=g(),E=r("h3"),as=l("MJS/CJS module import"),T=g(),x=r("pre"),z=g(),v=r("h3"),ns=l("IIFE as "),P=r("code"),ts=l("Window"),ps=l(" Object"),R=g(),S=r("pre"),W=g(),C=r("h3"),es=l("As third party module in any frameworks"),q=g(),j=r("pre"),this.h()},l(s){n=u(s,"H2",{id:!0});var p=k(n);d=c(p,"Usage"),p.forEach(a),f=y(s),i=u(s,"P",{});var b=k(i);e=c(b,"Animation functions available via named import as "),m=u(b,"CODE",{});var ls=k(m);O=c(ls,"MJS/CJS"),ls.forEach(a),B=c(b," module or via global "),H=u(b,"CODE",{});var cs=k(H);N=c(cs,"Window.Slidy"),cs.forEach(a),V=c(b," object props as "),I=u(b,"CODE",{});var is=k(I);G=c(is,"IIFE"),is.forEach(a),K=c(b,"."),b.forEach(a),D=y(s),_=u(s,"P",{});var A=k(_);Q=c(A,"Includes "),J=u(A,"CODE",{});var rs=k(J);X=c(rs,"fade, flip, matrix, rotate, scale, stairs, translate"),rs.forEach(a),Y=c(A," & "),$=u(A,"CODE",{});var us=k($);Z=c(us,"blur, deck, shuffle"),us.forEach(a),ss=c(A," in progress as functions."),A.forEach(a),F=y(s),w=u(s,"PRE",{class:!0});var ws=k(w);ws.forEach(a),L=y(s),E=u(s,"H3",{id:!0});var ks=k(E);as=c(ks,"MJS/CJS module import"),ks.forEach(a),T=y(s),x=u(s,"PRE",{class:!0});var Es=k(x);Es.forEach(a),z=y(s),v=u(s,"H3",{id:!0});var U=k(v);ns=c(U,"IIFE as "),P=u(U,"CODE",{});var ms=k(P);ts=c(ms,"Window"),ms.forEach(a),ps=c(U," Object"),U.forEach(a),R=y(s),S=u(s,"PRE",{class:!0});var xs=k(S);xs.forEach(a),W=y(s),C=u(s,"H3",{id:!0});var ds=k(C);es=c(ds,"As third party module in any frameworks"),ds.forEach(a),q=y(s),j=u(s,"PRE",{class:!0});var Ss=k(j);Ss.forEach(a),this.h()},h(){h(n,"id","usage"),h(w,"class","language-ts"),h(E,"id","mjscjs-module-import"),h(x,"class","language-html"),h(v,"id","iife-as-window-object"),h(S,"class","language-html"),h(C,"id","as-third-party-module-in-any-frameworks"),h(j,"class","language-svelte")},m(s,p){o(s,n,p),t(n,d),o(s,f,p),o(s,i,p),t(i,e),t(i,m),t(m,O),t(i,B),t(i,H),t(H,N),t(i,V),t(i,I),t(I,G),t(i,K),o(s,D,p),o(s,_,p),t(_,Q),t(_,J),t(J,X),t(_,Y),t(_,$),t($,Z),t(_,ss),o(s,F,p),o(s,w,p),w.innerHTML=gs,o(s,L,p),o(s,E,p),t(E,as),o(s,T,p),o(s,x,p),x.innerHTML=ys,o(s,z,p),o(s,v,p),t(v,ns),t(v,P),t(P,ts),t(v,ps),o(s,R,p),o(s,S,p),S.innerHTML=bs,o(s,W,p),o(s,C,p),t(C,es),o(s,q,p),o(s,j,p),j.innerHTML=hs},p:Ds,d(s){s&&a(n),s&&a(f),s&&a(i),s&&a(D),s&&a(_),s&&a(F),s&&a(w),s&&a(L),s&&a(E),s&&a(T),s&&a(x),s&&a(z),s&&a(v),s&&a(R),s&&a(S),s&&a(W),s&&a(C),s&&a(q),s&&a(j)}}}function Ts(M){let n,d;const f=[M[0],vs];let i={$$slots:{default:[Ls]},$$scope:{ctx:M}};for(let e=0;e<f.length;e+=1)i=os(i,f[e]);return n=new Fs({props:i}),{c(){Os(n.$$.fragment)},l(e){As(n.$$.fragment,e)},m(e,m){Hs(n,e,m),d=!0},p(e,[m]){const O=m&1?Is(f,[m&1&&fs(e[0]),m&0&&fs(vs)]):{};m&2&&(O.$$scope={dirty:m,ctx:e}),n.$set(O)},i(e){d||(Js(n.$$.fragment,e),d=!0)},o(e){$s(n.$$.fragment,e),d=!1},d(e){Ps(n,e)}}}const vs={title:"Usage"};function zs(M,n,d){return M.$$set=f=>{d(0,n=os(os({},n),_s(f)))},n=_s(n),[n]}class Us extends Cs{constructor(n){super(),js(this,n,zs,Ts,Ms,{})}}export{Us as default,vs as metadata};
