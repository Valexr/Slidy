import{a as c,t as l}from"./disclose-version.Cp7DA_hC.js";import"./legacy.BiVEy3HN.js";import{s as i,f as r,c as u,r as k}from"./runtime.BJ_-nNzH.js";import{h as d}from"./html.CdE0Dczy.js";import{l as m,s as g}from"./props.CImQ9uag.js";import{P as h}from"./Page.BgIqYFx-.js";const v={toc:[{level:2,title:"Recipes",id:"recipes"},{level:3,title:"External controls",id:"external-controls"}]};var b=l('<h2 id="recipes">Recipes</h2> <h3 id="external-controls">External controls</h3> <p>It is possible to control the navigation of the <code>Slidy</code> instance from the parent component via binding.</p> <p>There are two variables available to control the component externally: <code>index</code> and <code>position</code>. Declare the variables to hold the values and bind them to the instance for the carousel control.</p> <pre class="language-svelte"><!></pre>',1);function P(n,t){const p=m(t,["children","$$slots","$$events","$$legacy"]);h(n,g(()=>p,v,{children:(e,f)=>{var s=b(),a=i(r(s),8),o=u(a);d(o,()=>`<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
	<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Slidy <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"svelte-slidy"</span><span class="token punctuation">;</span>

	<span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token keyword">let</span> position <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">on:</span>click=</span><span class="token language-javascript"><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>index <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token punctuation">></span></span> Next slide <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">on:</span>click=</span><span class="token language-javascript"><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>position <span class="token operator">+=</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token punctuation">></span></span> Move <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Slidy</span> <span class="token attr-name"><span class="token namespace">bind:</span>index</span> <span class="token attr-name"><span class="token namespace">bind:</span>position</span> <span class="token punctuation">/></span></span></code>`),k(a),c(e,s)},$$slots:{default:!0}}))}export{P as default,v as metadata};
