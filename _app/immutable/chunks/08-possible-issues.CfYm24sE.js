import{s as g,l as u,d as c,n as v,i as r,m as x,c as m,o as _,g as b,h as p,j as $,q as f}from"./scheduler.CHYfDSvP.js";import{S as w,i as y,d as C,a as P,t as j,m as k,c as H,b as L}from"./index.CNaes6TE.js";import{g as S,a as h}from"./spread.CgU5AtxT.js";import{P as q}from"./Page.FUkGPQvN.js";function M(i){let e,n="Possible issues",a,o,t="<li>Slides should not have <code>absolute</code> positioning, otherwise the [core-package][] script wonâ€™t get correct dimentions;</li> <li>Using the <code>background</code> option usually is not recommended. In case you need to use it, specify the slide sizes with custom properties: <code>width</code> and <code>height</code>, or just <code>aspect-ratio</code>.</li>";return{c(){e=p("h2"),e.textContent=n,a=$(),o=p("ul"),o.innerHTML=t,this.h()},l(s){e=m(s,"H2",{id:!0,"data-svelte-h":!0}),_(e)!=="svelte-u3l51l"&&(e.textContent=n),a=b(s),o=m(s,"UL",{"data-svelte-h":!0}),_(o)!=="svelte-1fnmkut"&&(o.innerHTML=t),this.h()},h(){x(e,"id","possible-issues")},m(s,l){r(s,e,l),r(s,a,l),r(s,o,l)},p:v,d(s){s&&(c(e),c(a),c(o))}}}function T(i){let e,n;const a=[i[0],d];let o={$$slots:{default:[M]},$$scope:{ctx:i}};for(let t=0;t<a.length;t+=1)o=u(o,a[t]);return e=new q({props:o}),{c(){L(e.$$.fragment)},l(t){H(e.$$.fragment,t)},m(t,s){k(e,t,s),n=!0},p(t,[s]){const l=s&1?S(a,[s&1&&h(t[0]),s&0&&h(d)]):{};s&2&&(l.$$scope={dirty:s,ctx:t}),e.$set(l)},i(t){n||(j(e.$$.fragment,t),n=!0)},o(t){P(e.$$.fragment,t),n=!1},d(t){C(e,t)}}}const d={toc:[{level:2,title:"Possible issues",id:"possible-issues"}]},{toc:D}=d;function U(i,e,n){return i.$$set=a=>{n(0,e=u(u({},e),f(a)))},e=f(e),[e]}class E extends w{constructor(e){super(),y(this,e,U,T,g,{})}}export{E as default,d as metadata};
