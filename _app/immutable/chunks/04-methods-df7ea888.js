import{S as Un,i as jn,s as An,C as gn,w as Bn,x as Pn,y as Ln,z as Nn,A as Mn,f as zn,t as Fn,B as In,V as Rn,l as e,r as u,a as g,m as p,n as o,u as i,h as a,c as _,p as k,b as q,F as n,E as Vn}from"./index-a4e35989.js";import{P as Yn}from"./Page-b4892605.js";import"./masthead.module-dfa8173f.js";function Gn(w){let s,d,f,r,l,c,h,K,Q,C,W,X,v,b,M,U,Z,nn,E,an,j,sn,tn,en,x,R,A,pn,on,S,ln,cn,T,H,B,un,rn,y,kn,P,dn,fn,L,D,mn,N,$,Hn=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>module<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
        <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> slidy <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/@slidy/core/dist/index.mjs"</span><span class="token punctuation">;</span>

        <span class="token keyword">const</span> node <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"#node"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> prev <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"#prev"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> next <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"#next"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">slidy</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
        slidy<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">snap</span><span class="token operator">:</span> <span class="token string">"center"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        prev<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> slidy<span class="token punctuation">.</span><span class="token function">to</span><span class="token punctuation">(</span>index <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        next<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> slidy<span class="token punctuation">.</span><span class="token function">to</span><span class="token punctuation">(</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>node<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token comment">&lt;!-- items --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nav</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>prev<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\u2190<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>next<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\u2192<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nav</span><span class="token punctuation">></span></span>

<span class="token comment">&lt;!--
    If &#96;slidy()&#96; is defined in global scope, use global event handlers as attribures:

    &lt;nav>
        &lt;button onclick="slidy.to(index - 1)">\u2190&lt;/button>
        &lt;button onclick="slidy.to(index + 1)">\u2192&lt;/button>
    &lt;/nav>
--></span></code>`;return{c(){s=e("h2"),d=u("Methods"),f=g(),r=e("table"),l=e("thead"),c=e("tr"),h=e("th"),K=u("Name"),Q=g(),C=e("th"),W=u("Description"),X=g(),v=e("tbody"),b=e("tr"),M=e("td"),U=e("code"),Z=u("to(index: number)"),nn=g(),E=e("td"),an=u("Scrolls to "),j=e("code"),sn=u("index"),tn=u("."),en=g(),x=e("tr"),R=e("td"),A=e("code"),pn=u("update({ option: value })"),on=g(),S=e("td"),ln=u("Update property in options."),cn=g(),T=e("tr"),H=e("td"),B=e("code"),un=u("destroy()"),rn=g(),y=e("td"),kn=u("Remove event listners, observers and default properties on "),P=e("code"),dn=u("slidy"),fn=u(" instance."),L=g(),D=e("h3"),mn=u("Methods Usage Example"),N=g(),$=e("pre"),this.h()},l(t){s=p(t,"H2",{id:!0});var m=o(s);d=i(m,"Methods"),m.forEach(a),f=_(t),r=p(t,"TABLE",{});var z=o(r);l=p(z,"THEAD",{});var _n=o(l);c=p(_n,"TR",{});var F=o(c);h=p(F,"TH",{align:!0});var hn=o(h);K=i(hn,"Name"),hn.forEach(a),Q=_(F),C=p(F,"TH",{align:!0});var vn=o(C);W=i(vn,"Description"),vn.forEach(a),F.forEach(a),_n.forEach(a),X=_(z),v=p(z,"TBODY",{});var O=o(v);b=p(O,"TR",{});var I=o(b);M=p(I,"TD",{align:!0});var En=o(M);U=p(En,"CODE",{});var yn=o(U);Z=i(yn,"to(index: number)"),yn.forEach(a),En.forEach(a),nn=_(I),E=p(I,"TD",{align:!0});var V=o(E);an=i(V,"Scrolls to "),j=p(V,"CODE",{});var bn=o(j);sn=i(bn,"index"),bn.forEach(a),tn=i(V,"."),V.forEach(a),I.forEach(a),en=_(O),x=p(O,"TR",{});var Y=o(x);R=p(Y,"TD",{align:!0});var xn=o(R);A=p(xn,"CODE",{});var Tn=o(A);pn=i(Tn,"update({ option: value })"),Tn.forEach(a),xn.forEach(a),on=_(Y),S=p(Y,"TD",{align:!0});var Dn=o(S);ln=i(Dn,"Update property in options."),Dn.forEach(a),Y.forEach(a),cn=_(O),T=p(O,"TR",{});var G=o(T);H=p(G,"TD",{align:!0});var $n=o(H);B=p($n,"CODE",{});var qn=o(B);un=i(qn,"destroy()"),qn.forEach(a),$n.forEach(a),rn=_(G),y=p(G,"TD",{align:!0});var J=o(y);kn=i(J,"Remove event listners, observers and default properties on "),P=p(J,"CODE",{});var wn=o(P);dn=i(wn,"slidy"),wn.forEach(a),fn=i(J," instance."),J.forEach(a),G.forEach(a),O.forEach(a),z.forEach(a),L=_(t),D=p(t,"H3",{id:!0});var Cn=o(D);mn=i(Cn,"Methods Usage Example"),Cn.forEach(a),N=_(t),$=p(t,"PRE",{class:!0});var On=o($);On.forEach(a),this.h()},h(){k(s,"id","methods"),k(h,"align","left"),k(C,"align","left"),k(M,"align","left"),k(E,"align","left"),k(R,"align","left"),k(S,"align","left"),k(H,"align","left"),k(y,"align","left"),k(D,"id","methods-usage-example"),k($,"class","language-html")},m(t,m){q(t,s,m),n(s,d),q(t,f,m),q(t,r,m),n(r,l),n(l,c),n(c,h),n(h,K),n(c,Q),n(c,C),n(C,W),n(r,X),n(r,v),n(v,b),n(b,M),n(M,U),n(U,Z),n(b,nn),n(b,E),n(E,an),n(E,j),n(j,sn),n(E,tn),n(v,en),n(v,x),n(x,R),n(R,A),n(A,pn),n(x,on),n(x,S),n(S,ln),n(v,cn),n(v,T),n(T,H),n(H,B),n(B,un),n(T,rn),n(T,y),n(y,kn),n(y,P),n(P,dn),n(y,fn),q(t,L,m),q(t,D,m),n(D,mn),q(t,N,m),q(t,$,m),$.innerHTML=Hn},p:Vn,d(t){t&&a(s),t&&a(f),t&&a(r),t&&a(L),t&&a(D),t&&a(N),t&&a($)}}}function Jn(w){let s,d;const f=[w[0],Sn];let r={$$slots:{default:[Gn]},$$scope:{ctx:w}};for(let l=0;l<f.length;l+=1)r=gn(r,f[l]);return s=new Yn({props:r}),{c(){Bn(s.$$.fragment)},l(l){Pn(s.$$.fragment,l)},m(l,c){Ln(s,l,c),d=!0},p(l,[c]){const h=c&1?Nn(f,[c&1&&Mn(l[0]),c&0&&Mn(Sn)]):{};c&2&&(h.$$scope={dirty:c,ctx:l}),s.$set(h)},i(l){d||(zn(s.$$.fragment,l),d=!0)},o(l){Fn(s.$$.fragment,l),d=!1},d(l){In(s,l)}}}const Sn={toc:[{level:2,title:"Methods",id:"methods"},{level:3,title:"Methods Usage Example",id:"methods-usage-example"}]};function Kn(w,s,d){return w.$$set=f=>{d(0,s=gn(gn({},s),Rn(f)))},s=Rn(s),[s]}class Zn extends Un{constructor(s){super(),jn(this,s,Kn,Jn,An,{})}}export{Zn as default,Sn as metadata};
