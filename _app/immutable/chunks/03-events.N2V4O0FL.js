import{s as xt,l as W,m as ct,e as p,a as k,t as ut,H as Tt,c as l,o as g,g as f,b as z,d as it,f as d,p as yt,q as O,i as y,h as s,n as Ht}from"./scheduler.yVBDbAbC.js";import{S as $t,i as Lt,c as kt,b as ft,m as gt,a as mt,t as ht,d as vt}from"./index.0Eb-6dyg.js";import{g as Mt,a as dt}from"./spread.CgU5AtxT.js";import{P as Ct}from"./Page.C6h8bRcP.js";import{L as Et}from"./Link.CD6mg0t0.js";function bt(v){let t,r="destroy()";return{c(){t=p("code"),t.textContent=r},l(c){t=l(c,"CODE",{"data-svelte-h":!0}),g(t)!=="svelte-vepdfd"&&(t.textContent=r)},m(c,i){y(c,t,i)},p:Ht,d(c){c&&d(t)}}}function wt(v){let t,r="Events",c,i,n,m='<tr><th align="left">Name</th> <th align="left">Detail</th> <th align="left">Description</th></tr>',M,e,C,X='<td align="left"><code>mount</code></td> <td align="left"><code>{options}</code></td> <td align="left"><code>node.children.length</code> and <code>node.children</code> are connected.</td>',U,E,Z='<td align="left"><code>resize</code></td> <td align="left"><code>{ROE}</code></td> <td align="left">The target node changed itâ€™s size: <code>ROE: ResizeObserverEntry[]</code></td>',I,b,tt='<td align="left"><code>move</code></td> <td align="left"><code>{index,position}</code></td> <td align="left">The sliding occured.</td>',N,w,nt='<td align="left"><code>index</code></td> <td align="left"><code>{index}</code></td> <td align="left">The index was changed.</td>',Y,q,at='<td align="left"><code>keys</code></td> <td align="left"><code>{e.key}</code></td> <td align="left">The key is pressed during the target node focus. Arrow keys behaviour is predefined for navigation with <code>preventDefault</code> used on them. To get the focus use <code>tabIndex=0</code> attribute on the target node.</td>',F,D,st='<td align="left"><code>update</code></td> <td align="left"><code>{updated.options}</code></td> <td align="left">Options were changed.</td>',G,h,H,et="<code>destroy</code>",J,$,ot="<code>{node}</code>",K,_,Q,x,V,j,T,pt="Events Usage Example",S,L,A,_t=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>module<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
        <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> slidy <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"@slidy/core"</span><span class="token punctuation">;</span>

        <span class="token keyword">const</span> node <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"#node"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">slidy</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"#node"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        node<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"mount"</span><span class="token punctuation">,</span> <span class="token parameter">e</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        node<span class="token punctuation">.</span><span class="token function-variable function">onupdate</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>detail<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">function</span> <span class="token function">onMove</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> index<span class="token punctuation">,</span> position <span class="token punctuation">&#125;</span> <span class="token operator">=</span> e<span class="token punctuation">.</span>detail
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> position<span class="token punctuation">)</span>
        <span class="token punctuation">&#125;</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>node<span class="token punctuation">"</span></span> <span class="token attr-name">onmove</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>onMove<span class="token punctuation">"</span></span> <span class="token attr-name">tabindex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token comment">&lt;!-- items --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span></code>`,P;return x=new Et({props:{href:"#methods",$$slots:{default:[bt]},$$scope:{ctx:v}}}),{c(){t=p("h2"),t.textContent=r,c=k(),i=p("table"),n=p("thead"),n.innerHTML=m,M=k(),e=p("tbody"),C=p("tr"),C.innerHTML=X,U=k(),E=p("tr"),E.innerHTML=Z,I=k(),b=p("tr"),b.innerHTML=tt,N=k(),w=p("tr"),w.innerHTML=nt,Y=k(),q=p("tr"),q.innerHTML=at,F=k(),D=p("tr"),D.innerHTML=st,G=k(),h=p("tr"),H=p("td"),H.innerHTML=et,J=k(),$=p("td"),$.innerHTML=ot,K=k(),_=p("td"),Q=ut("Targed node is unmounted from the DOM or "),kt(x.$$.fragment),V=ut(" method was used."),j=k(),T=p("h3"),T.textContent=pt,S=k(),L=p("pre"),A=new Tt(!1),this.h()},l(a){t=l(a,"H2",{id:!0,"data-svelte-h":!0}),g(t)!=="svelte-1wsrf4q"&&(t.textContent=r),c=f(a),i=l(a,"TABLE",{});var u=z(i);n=l(u,"THEAD",{"data-svelte-h":!0}),g(n)!=="svelte-1bz2ka7"&&(n.innerHTML=m),M=f(u),e=l(u,"TBODY",{});var o=z(e);C=l(o,"TR",{"data-svelte-h":!0}),g(C)!=="svelte-1fxuhsj"&&(C.innerHTML=X),U=f(o),E=l(o,"TR",{"data-svelte-h":!0}),g(E)!=="svelte-1wc5fkh"&&(E.innerHTML=Z),I=f(o),b=l(o,"TR",{"data-svelte-h":!0}),g(b)!=="svelte-4vd3k0"&&(b.innerHTML=tt),N=f(o),w=l(o,"TR",{"data-svelte-h":!0}),g(w)!=="svelte-1q8fyzm"&&(w.innerHTML=nt),Y=f(o),q=l(o,"TR",{"data-svelte-h":!0}),g(q)!=="svelte-pyd9b"&&(q.innerHTML=at),F=f(o),D=l(o,"TR",{"data-svelte-h":!0}),g(D)!=="svelte-14yjwzv"&&(D.innerHTML=st),G=f(o),h=l(o,"TR",{});var R=z(h);H=l(R,"TD",{align:!0,"data-svelte-h":!0}),g(H)!=="svelte-1okpmh2"&&(H.innerHTML=et),J=f(R),$=l(R,"TD",{align:!0,"data-svelte-h":!0}),g($)!=="svelte-187yu2"&&($.innerHTML=ot),K=f(R),_=l(R,"TD",{align:!0});var B=z(_);Q=it(B,"Targed node is unmounted from the DOM or "),ft(x.$$.fragment,B),V=it(B," method was used."),B.forEach(d),R.forEach(d),o.forEach(d),u.forEach(d),j=f(a),T=l(a,"H3",{id:!0,"data-svelte-h":!0}),g(T)!=="svelte-17dqb0g"&&(T.textContent=pt),S=f(a),L=l(a,"PRE",{class:!0});var lt=z(L);A=yt(lt,!1),lt.forEach(d),this.h()},h(){O(t,"id","events"),O(H,"align","left"),O($,"align","left"),O(_,"align","left"),O(T,"id","events-usage-example"),A.a=null,O(L,"class","language-html")},m(a,u){y(a,t,u),y(a,c,u),y(a,i,u),s(i,n),s(i,M),s(i,e),s(e,C),s(e,U),s(e,E),s(e,I),s(e,b),s(e,N),s(e,w),s(e,Y),s(e,q),s(e,F),s(e,D),s(e,G),s(e,h),s(h,H),s(h,J),s(h,$),s(h,K),s(h,_),s(_,Q),gt(x,_,null),s(_,V),y(a,j,u),y(a,T,u),y(a,S,u),y(a,L,u),A.m(_t,L),P=!0},p(a,u){const o={};u&2&&(o.$$scope={dirty:u,ctx:a}),x.$set(o)},i(a){P||(mt(x.$$.fragment,a),P=!0)},o(a){ht(x.$$.fragment,a),P=!1},d(a){a&&(d(t),d(c),d(i),d(j),d(T),d(S),d(L)),vt(x)}}}function qt(v){let t,r;const c=[v[0],rt];let i={$$slots:{default:[wt]},$$scope:{ctx:v}};for(let n=0;n<c.length;n+=1)i=W(i,c[n]);return t=new Ct({props:i}),{c(){kt(t.$$.fragment)},l(n){ft(t.$$.fragment,n)},m(n,m){gt(t,n,m),r=!0},p(n,[m]){const M=m&1?Mt(c,[m&1&&dt(n[0]),m&0&&dt(rt)]):{};m&2&&(M.$$scope={dirty:m,ctx:n}),t.$set(M)},i(n){r||(mt(t.$$.fragment,n),r=!0)},o(n){ht(t.$$.fragment,n),r=!1},d(n){vt(t,n)}}}const rt={toc:[{level:2,title:"Events",id:"events"},{level:3,title:"Events Usage Example",id:"events-usage-example"}]};function Dt(v,t,r){return v.$$set=c=>{r(0,t=W(W({},t),ct(c)))},t=ct(t),[t]}class At extends $t{constructor(t){super(),Lt(this,t,Dt,qt,xt,{})}}export{At as default,rt as metadata};
