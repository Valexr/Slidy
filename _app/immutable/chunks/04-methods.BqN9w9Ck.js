import{s as H,l as y,d as u,n as M,i as k,m as _,c as g,o as h,g as v,e as S,p as E,h as f,j as x,H as j,q as $}from"./scheduler.CHYfDSvP.js";import{S as T,i as L,d as P,a as U,t as R,m as A,c as B,b as D}from"./index.CNaes6TE.js";import{g as I,a as w}from"./spread.CgU5AtxT.js";import{P as N}from"./Page.FUkGPQvN.js";function z(r){let n,l="Methods",o,p,s='<thead><tr><th align="left">Name</th> <th align="left">Description</th></tr></thead> <tbody><tr><td align="left"><code>to(index: number)</code></td> <td align="left">Scrolls to <code>index</code>.</td></tr> <tr><td align="left"><code>update({ option: value })</code></td> <td align="left">Update property in options.</td></tr> <tr><td align="left"><code>destroy()</code></td> <td align="left">Remove event listners, observers and default properties on <code>slidy</code> instance.</td></tr></tbody>',t,e,q="Methods Usage Example",d,i,m,C=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>module<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
        <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> slidy <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/@slidy/core/dist/index.mjs"</span><span class="token punctuation">;</span>

        <span class="token keyword">const</span> node <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"#node"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> prev <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"#prev"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> next <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"#next"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">slidy</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
        slidy<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">snap</span><span class="token operator">:</span> <span class="token string">"center"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        prev<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> slidy<span class="token punctuation">.</span><span class="token function">to</span><span class="token punctuation">(</span>index <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        next<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> slidy<span class="token punctuation">.</span><span class="token function">to</span><span class="token punctuation">(</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>node<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token comment">&lt;!-- items --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nav</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>prev<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>←<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>next<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>→<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nav</span><span class="token punctuation">></span></span>

<span class="token comment">&lt;!--
    If &#96;slidy()&#96; is defined in global scope, use global event handlers as attribures:

    &lt;nav>
        &lt;button onclick="slidy.to(index - 1)">←&lt;/button>
        &lt;button onclick="slidy.to(index + 1)">→&lt;/button>
    &lt;/nav>
--></span></code>`;return{c(){n=f("h2"),n.textContent=l,o=x(),p=f("table"),p.innerHTML=s,t=x(),e=f("h3"),e.textContent=q,d=x(),i=f("pre"),m=new j(!1),this.h()},l(a){n=g(a,"H2",{id:!0,"data-svelte-h":!0}),h(n)!=="svelte-ib27bq"&&(n.textContent=l),o=v(a),p=g(a,"TABLE",{"data-svelte-h":!0}),h(p)!=="svelte-1q2mx51"&&(p.innerHTML=s),t=v(a),e=g(a,"H3",{id:!0,"data-svelte-h":!0}),h(e)!=="svelte-3i36e6"&&(e.textContent=q),d=v(a),i=g(a,"PRE",{class:!0});var c=S(i);m=E(c,!1),c.forEach(u),this.h()},h(){_(n,"id","methods"),_(e,"id","methods-usage-example"),m.a=null,_(i,"class","language-html")},m(a,c){k(a,n,c),k(a,o,c),k(a,p,c),k(a,t,c),k(a,e,c),k(a,d,c),k(a,i,c),m.m(C,i)},p:M,d(a){a&&(u(n),u(o),u(p),u(t),u(e),u(d),u(i))}}}function F(r){let n,l;const o=[r[0],b];let p={$$slots:{default:[z]},$$scope:{ctx:r}};for(let s=0;s<o.length;s+=1)p=y(p,o[s]);return n=new N({props:p}),{c(){D(n.$$.fragment)},l(s){B(n.$$.fragment,s)},m(s,t){A(n,s,t),l=!0},p(s,[t]){const e=t&1?I(o,[t&1&&w(s[0]),t&0&&w(b)]):{};t&2&&(e.$$scope={dirty:t,ctx:s}),n.$set(e)},i(s){l||(R(n.$$.fragment,s),l=!0)},o(s){U(n.$$.fragment,s),l=!1},d(s){P(n,s)}}}const b={toc:[{level:2,title:"Methods",id:"methods"},{level:3,title:"Methods Usage Example",id:"methods-usage-example"}]},{toc:V}=b;function G(r,n,l){return r.$$set=o=>{l(0,n=y(y({},n),$(o)))},n=$(n),[n]}class W extends T{constructor(n){super(),L(this,n,G,F,H,{})}}export{W as default,b as metadata};
