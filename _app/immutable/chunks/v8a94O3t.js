import{t as C,a as P,b as d}from"./BIixSpEv.js";import"./QpzcpCxn.js";import{Z as s,Y as G,_ as a,a0 as n,$ as O}from"./BcI4TTht.js";import{h as p}from"./C0XWuU5n.js";import{l as M,s as z}from"./CNgHZV7j.js";import{P as L}from"./6CNNXzmT.js";import{L as N}from"./CXh127ok.js";const g={toc:[{level:2,title:"Options",id:"options"},{level:3,title:"Queries",id:"queries"},{level:3,title:"Getter",id:"getter"},{level:3,title:"Cookie",id:"cookie"}]},{toc:H}=g;var A=C(`<h2 id="options">Options</h2> <p>All arguments are optional, only <code>queries</code> required.</p> <pre class="language-ts"><!></pre> <h3 id="queries">Queries</h3> <p>Media queries rules object like <code>&#123; dark: '(prefers-color-scheme: dark)' &#125;</code>. Support multiple conditions like <code>'(max-width: 840px) or (prefers-color-scheme: light)'</code> more <code>@media</code> rules on <!></p> <pre class="language-ts"><!></pre> <pre class="language-html"><!></pre> <h3 id="getter">Getter</h3> <p>Callback function with matches object results.</p> <pre class="language-ts"><!></pre> <pre class="language-html"><!></pre> <h3 id="cookie">Cookie</h3> <p>Persist media-query matches object in browser cookie like JSON string. Cookie key <code>media</code>.</p> <pre class="language-ts"><!></pre> <pre class="language-html"><!></pre>`,1);function I(m,y){const h=M(y,["children","$$slots","$$events","$$legacy"]);L(m,z(()=>h,g,{children:(v,D)=>{var k=A(),t=s(G(k),4),f=a(t);p(f,()=>`<code class="language-ts"><span class="token keyword">interface</span> <span class="token class-name">Options</span> <span class="token punctuation">&#123;</span>
    queries<span class="token operator">?</span><span class="token operator">:</span> Queries<span class="token punctuation">,</span>
    getter<span class="token operator">?</span><span class="token operator">:</span> Getter<span class="token punctuation">,</span>
    cookie<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span>
<span class="token punctuation">&#125;</span></code>`),n(t);var e=s(t,4),w=s(a(e),7);N(w,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/@media#logical_operators",rel:"nofollow",children:(j,J)=>{O();var Q=P("MDN");d(j,Q)},$$slots:{default:!0}}),n(e);var o=s(e,2),x=a(o);p(x,()=>`<code class="language-ts"><span class="token keyword">type</span> <span class="token class-name">Queries</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
    <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span></code>`),n(o);var c=s(o,2),_=a(c);p(_,()=>`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>module<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
        <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> media <span class="token keyword">as</span> mediaStore <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'https://unpkg.com/@slidy/media/dist/index.mjs'</span><span class="token punctuation">;</span>

        <span class="token keyword">const</span> <span class="token literal-property property">queries</span><span class="token operator">:</span> MediaQuery <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
            <span class="token literal-property property">xs</span><span class="token operator">:</span> <span class="token string">'(max-width: 480px)'</span><span class="token punctuation">,</span>
            <span class="token literal-property property">sm</span><span class="token operator">:</span> <span class="token string">'(max-width: 600px)'</span><span class="token punctuation">,</span>
            <span class="token literal-property property">md</span><span class="token operator">:</span> <span class="token string">'(max-width: 840px)'</span><span class="token punctuation">,</span>
            <span class="token literal-property property">lg</span><span class="token operator">:</span> <span class="token string">'(max-width: 960px)'</span><span class="token punctuation">,</span>
            <span class="token literal-property property">xl</span><span class="token operator">:</span> <span class="token string">'(max-width: 1280px)'</span><span class="token punctuation">,</span>
            <span class="token literal-property property">xxl</span><span class="token operator">:</span> <span class="token string">'(min-width: 1281px)'</span><span class="token punctuation">,</span>
            <span class="token literal-property property">landscape</span><span class="token operator">:</span> <span class="token string">'(orientation: landscape)'</span><span class="token punctuation">,</span>
            <span class="token literal-property property">portrait</span><span class="token operator">:</span> <span class="token string">'(orientation: portrait)'</span><span class="token punctuation">,</span>
            <span class="token literal-property property">dark</span><span class="token operator">:</span> <span class="token string">'(prefers-color-scheme: dark)'</span><span class="token punctuation">,</span>
            <span class="token literal-property property">light</span><span class="token operator">:</span> <span class="token string">'(prefers-color-scheme: light)'</span><span class="token punctuation">,</span>
            <span class="token literal-property property">mouse</span><span class="token operator">:</span> <span class="token string">'(hover: hover)'</span><span class="token punctuation">,</span>
            <span class="token literal-property property">touch</span><span class="token operator">:</span> <span class="token string">'(hover: none)'</span>
        <span class="token punctuation">&#125;</span>
        <span class="token keyword">const</span> media <span class="token operator">=</span> <span class="token function">mediaStore</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> queries <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></code>`),n(c);var l=s(c,6),b=a(l);p(b,()=>'<code class="language-ts"><span class="token keyword">type</span> <span class="token class-name">Getter</span> <span class="token operator">=</span> <span class="token punctuation">(</span>matches<span class="token operator">:</span> Queries<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">void</span></code>'),n(l);var r=s(l,2),$=a(r);p($,()=>`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>module<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
        <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> media <span class="token keyword">as</span> mediaStore <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'https://unpkg.com/@slidy/media/dist/index.mjs'</span><span class="token punctuation">;</span>

        <span class="token keyword">const</span> <span class="token function-variable function">getter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">mqs</span><span class="token punctuation">)</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>mqs<span class="token punctuation">)</span>

        <span class="token keyword">const</span> media <span class="token operator">=</span> <span class="token function">mediaStore</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> getter <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></code>`),n(r);var i=s(r,6),q=a(i);p(q,()=>'<code class="language-ts"><span class="token keyword">const</span> cookie<span class="token operator">:</span> <span class="token builtin">boolean</span></code>'),n(i);var u=s(i,2),S=a(u);p(S,()=>`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>module<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
        <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> media <span class="token keyword">as</span> mediaStore <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'https://unpkg.com/@slidy/media/dist/index.mjs'</span><span class="token punctuation">;</span>

        <span class="token keyword">const</span> media <span class="token operator">=</span> <span class="token function">mediaStore</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">cookie</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></code>`),n(u),d(v,k)},$$slots:{default:!0}}))}export{I as default,g as metadata};
