import{S as Ws,i as As,s as Us,C as Is,w as ss,x as ns,y as as,z as Gs,A as zs,f as ts,t as ps,B as es,V as Hs,l as i,r as o,a as _,m as k,n as r,u as l,h as n,c as $,p as O,b as c,F as p}from"./index-2e946c61.js";import{P as Bs}from"./Page-fc949d61.js";import{L as js}from"./Link-0438ac1f.js";import"./masthead.module-e6e6db0b.js";function Vs(f){let a;return{c(){a=o("module")},l(e){a=l(e,"module")},m(e,d){c(e,a,d)},d(e){e&&n(a)}}}function Ks(f){let a;return{c(){a=o("Global property")},l(e){a=l(e,"Global property")},m(e,d){c(e,a,d)},d(e){e&&n(a)}}}function Ns(f){let a;return{c(){a=o("IIFE")},l(e){a=l(e,"IIFE")},m(e,d){c(e,a,d)},d(e){e&&n(a)}}}function Qs(f){let a,e,d,m,u,g,H,os,G,v,P,E,ls,cs,b,S,us,F,is,ks,rs,T,j,ds,z,y,fs,J,ms,gs,R,_s,$s,B,I,vs,V,M,Ps=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>module<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
        <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> slidy <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'https://unpkg.com/@slidy/core/dist/index.mjs'</span><span class="token punctuation">;</span> <span class="token comment">// MJS module</span>
        <span class="token comment">// OR</span>
        <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> slidy <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'https://unpkg.com/@slidy/core/dist/index.cjs'</span><span class="token punctuation">;</span> <span class="token comment">// CJS module</span>

        <span class="token keyword">const</span> node <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"#node"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">slidy</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>node<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token comment">&lt;!-- slidy items --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span></code>`,K,h,ys,W,hs,ws,N,q,Ts=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://unpkg.com/@slidy/core<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">let</span> slidy <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
        node <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#slidy'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

        window<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
            slidy <span class="token operator">=</span> Slidy<span class="token punctuation">.</span><span class="token function">core</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>slidy<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
        ...
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span></code>`,Q,x,Es,X,C,Ds=`<code class="language-svelte"><span class="token comment">&lt;!-- Svelte --></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> slidy <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@slidy/core'</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name"><span class="token namespace">use:</span>slidy</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
        ...
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span></code>`,Y;return E=new js({props:{href:"#module",$$slots:{default:[Vs]},$$scope:{ctx:f}}}),S=new js({props:{href:"#window",$$slots:{default:[Ks]},$$scope:{ctx:f}}}),j=new js({props:{href:"#iife",$$slots:{default:[Ns]},$$scope:{ctx:f}}}),{c(){a=i("h2"),e=o("Usage"),d=_(),m=i("p"),u=o("There are several options how to get "),g=i("code"),H=o("Slidy"),os=o(" into your project:"),G=_(),v=i("ul"),P=i("li"),ss(E.$$.fragment),ls=o(", both ESM and CJS are available;"),cs=_(),b=i("li"),ss(S.$$.fragment),us=o(" on "),F=i("code"),is=o("Window"),ks=o(" object;"),rs=_(),T=i("li"),ss(j.$$.fragment),ds=o(";"),z=_(),y=i("p"),fs=o("The only option "),J=i("em"),ms=o("required"),gs=o(" is the DOM "),R=i("code"),_s=o("node"),$s=o("."),B=_(),I=i("h3"),vs=o("Module"),V=_(),M=i("pre"),K=_(),h=i("h3"),ys=o("IIFE as "),W=i("code"),hs=o("Window"),ws=o(" Object"),N=_(),q=i("pre"),Q=_(),x=i("h3"),Es=o("As third party module in any frameworks"),X=_(),C=i("pre"),this.h()},l(s){a=k(s,"H2",{id:!0});var t=r(a);e=l(t,"Usage"),t.forEach(n),d=$(s),m=k(s,"P",{});var L=r(m);u=l(L,"There are several options how to get "),g=k(L,"CODE",{});var A=r(g);H=l(A,"Slidy"),A.forEach(n),os=l(L," into your project:"),L.forEach(n),G=$(s),v=k(s,"UL",{});var w=r(v);P=k(w,"LI",{});var bs=r(P);ns(E.$$.fragment,bs),ls=l(bs,", both ESM and CJS are available;"),bs.forEach(n),cs=$(w),b=k(w,"LI",{});var U=r(b);ns(S.$$.fragment,U),us=l(U," on "),F=k(U,"CODE",{});var Ms=r(F);is=l(Ms,"Window"),Ms.forEach(n),ks=l(U," object;"),U.forEach(n),rs=$(w),T=k(w,"LI",{});var Ss=r(T);ns(j.$$.fragment,Ss),ds=l(Ss,";"),Ss.forEach(n),w.forEach(n),z=$(s),y=k(s,"P",{});var D=r(y);fs=l(D,"The only option "),J=k(D,"EM",{});var qs=r(J);ms=l(qs,"required"),qs.forEach(n),gs=l(D," is the DOM "),R=k(D,"CODE",{});var xs=r(R);_s=l(xs,"node"),xs.forEach(n),$s=l(D,"."),D.forEach(n),B=$(s),I=k(s,"H3",{id:!0});var Cs=r(I);vs=l(Cs,"Module"),Cs.forEach(n),V=$(s),M=k(s,"PRE",{class:!0});var Fs=r(M);Fs.forEach(n),K=$(s),h=k(s,"H3",{id:!0});var Z=r(h);ys=l(Z,"IIFE as "),W=k(Z,"CODE",{});var Ls=r(W);hs=l(Ls,"Window"),Ls.forEach(n),ws=l(Z," Object"),Z.forEach(n),N=$(s),q=k(s,"PRE",{class:!0});var Js=r(q);Js.forEach(n),Q=$(s),x=k(s,"H3",{id:!0});var Os=r(x);Es=l(Os,"As third party module in any frameworks"),Os.forEach(n),X=$(s),C=k(s,"PRE",{class:!0});var Rs=r(C);Rs.forEach(n),this.h()},h(){O(a,"id","usage"),O(I,"id","module"),O(M,"class","language-html"),O(h,"id","iife-as-window-object"),O(q,"class","language-html"),O(x,"id","as-third-party-module-in-any-frameworks"),O(C,"class","language-svelte")},m(s,t){c(s,a,t),p(a,e),c(s,d,t),c(s,m,t),p(m,u),p(m,g),p(g,H),p(m,os),c(s,G,t),c(s,v,t),p(v,P),as(E,P,null),p(P,ls),p(v,cs),p(v,b),as(S,b,null),p(b,us),p(b,F),p(F,is),p(b,ks),p(v,rs),p(v,T),as(j,T,null),p(T,ds),c(s,z,t),c(s,y,t),p(y,fs),p(y,J),p(J,ms),p(y,gs),p(y,R),p(R,_s),p(y,$s),c(s,B,t),c(s,I,t),p(I,vs),c(s,V,t),c(s,M,t),M.innerHTML=Ps,c(s,K,t),c(s,h,t),p(h,ys),p(h,W),p(W,hs),p(h,ws),c(s,N,t),c(s,q,t),q.innerHTML=Ts,c(s,Q,t),c(s,x,t),p(x,Es),c(s,X,t),c(s,C,t),C.innerHTML=Ds,Y=!0},p(s,t){const L={};t&2&&(L.$$scope={dirty:t,ctx:s}),E.$set(L);const A={};t&2&&(A.$$scope={dirty:t,ctx:s}),S.$set(A);const w={};t&2&&(w.$$scope={dirty:t,ctx:s}),j.$set(w)},i(s){Y||(ts(E.$$.fragment,s),ts(S.$$.fragment,s),ts(j.$$.fragment,s),Y=!0)},o(s){ps(E.$$.fragment,s),ps(S.$$.fragment,s),ps(j.$$.fragment,s),Y=!1},d(s){s&&n(a),s&&n(d),s&&n(m),s&&n(G),s&&n(v),es(E),es(S),es(j),s&&n(z),s&&n(y),s&&n(B),s&&n(I),s&&n(V),s&&n(M),s&&n(K),s&&n(h),s&&n(N),s&&n(q),s&&n(Q),s&&n(x),s&&n(X),s&&n(C)}}}function Xs(f){let a,e;const d=[f[0]];let m={$$slots:{default:[Qs]},$$scope:{ctx:f}};for(let u=0;u<d.length;u+=1)m=Is(m,d[u]);return a=new Bs({props:m}),{c(){ss(a.$$.fragment)},l(u){ns(a.$$.fragment,u)},m(u,g){as(a,u,g),e=!0},p(u,[g]){const H=g&1?Gs(d,[zs(u[0])]):{};g&2&&(H.$$scope={dirty:g,ctx:u}),a.$set(H)},i(u){e||(ts(a.$$.fragment,u),e=!0)},o(u){ps(a.$$.fragment,u),e=!1},d(u){es(a,u)}}}function Ys(f,a,e){return f.$$set=d=>{e(0,a=Is(Is({},a),Hs(d)))},a=Hs(a),[a]}class tn extends Ws{constructor(a){super(),As(this,a,Ys,Xs,Us,{})}}export{tn as default};
