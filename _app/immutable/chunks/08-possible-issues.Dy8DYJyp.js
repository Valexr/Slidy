import{s as g,l as u,m as d,e as m,a as v,c as _,o as p,g as x,q as b,i as c,n as $,f as r}from"./scheduler.yVBDbAbC.js";import{S as w,i as y,c as C,b as P,m as k,a as H,t as L,d as S}from"./index.0Eb-6dyg.js";import{g as j,a as f}from"./spread.CgU5AtxT.js";import{P as q}from"./Page.BLYzVjz-.js";function M(i){let e,n="Possible issues",o,a,t="<li>Slides should not have <code>absolute</code> positioning, otherwise the [core-package][] script wonâ€™t get correct dimentions;</li> <li>Using the <code>background</code> option usually is not recommended. In case you need to use it, specify the slide sizes with custom properties: <code>width</code> and <code>height</code>, or just <code>aspect-ratio</code>.</li>";return{c(){e=m("h2"),e.textContent=n,o=v(),a=m("ul"),a.innerHTML=t,this.h()},l(s){e=_(s,"H2",{id:!0,"data-svelte-h":!0}),p(e)!=="svelte-u3l51l"&&(e.textContent=n),o=x(s),a=_(s,"UL",{"data-svelte-h":!0}),p(a)!=="svelte-1fnmkut"&&(a.innerHTML=t),this.h()},h(){b(e,"id","possible-issues")},m(s,l){c(s,e,l),c(s,o,l),c(s,a,l)},p:$,d(s){s&&(r(e),r(o),r(a))}}}function T(i){let e,n;const o=[i[0],h];let a={$$slots:{default:[M]},$$scope:{ctx:i}};for(let t=0;t<o.length;t+=1)a=u(a,o[t]);return e=new q({props:a}),{c(){C(e.$$.fragment)},l(t){P(e.$$.fragment,t)},m(t,s){k(e,t,s),n=!0},p(t,[s]){const l=s&1?j(o,[s&1&&f(t[0]),s&0&&f(h)]):{};s&2&&(l.$$scope={dirty:s,ctx:t}),e.$set(l)},i(t){n||(H(e.$$.fragment,t),n=!0)},o(t){L(e.$$.fragment,t),n=!1},d(t){S(e,t)}}}const h={toc:[{level:2,title:"Possible issues",id:"possible-issues"}]};function U(i,e,n){return i.$$set=o=>{n(0,e=u(u({},e),d(o)))},e=d(e),[e]}class D extends w{constructor(e){super(),y(this,e,U,T,g,{})}}export{D as default,h as metadata};
