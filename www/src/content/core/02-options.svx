## Options

`@slidy/core` does not style the DOM, there only some inline properties applied to the target node:

```css
{
    outline: none;
    overflow: hidden;
    user-select: none;
}
```

In case you need the reversed flow:

- `flex-flow: row-reverse | column-reverse` property;
- `direction: rtl` property;
- `dir="rtl"` attribute. 

⚠️ Do not apply absolute positioning to the children. As the script uses coordinates from the `childNodes` the functionality won't work properly.

For deck flow use `options.snap: 'deck'`.

| Key         | Default     | Type       | Description |
| :---------- | :----------: | :--------- | :---------- |
| `index`     | 0         | number   | The starting index on render. |
| `clamp`     | 0         | number   | Defines the step in number of slides to slide on. |
| `indent`    | 1         | number   | Creates an indent at the edges. The value is calculated from the gap: `gap * indent` |
| `sensity`   | 5         | number   | Defines sensite as the pixels required to drag in order to start move, `0` when sliding. |
| `gravity`   | 1.2       | number   | Controls the gravity value `0 (space) : 1 (earth) : 2 (underground)`. |
| `duration`  | 375       | number   | Sliding duration in ms. |
| `animation` | undefined | AnimationFunc | Custom sliding animation. Predefined sets are available via [@slidy/animation]. |
| `easing`    | undefined | `(t: number) => number` | Sliding easing behaviour. Predefined sets are available vie [@slidy/easing]. |
| `snap`      | undefined | string   | Defines an area to "snap" the slide: `"start", "center", "end", "deck", undefined`. By default the behaviour is clamp sliding by edges. |
| `axis`      | undefined | `"x"` or `"y"` | Defines the flow direction. |
| `loop`      | false     | boolean  | Activated the infinite sliding mode. |

Readonly properties:

| Key         | Type     | Description |
| :---------- | :------- | :---------- |
| `position`  | `number` | Current position |
| `direction` | `number` | Children move direction |
| `vertical`  | `number` | Children axis flow: `0` or any `Number` as `true` |
| `reverse`   | `number` | Children reverse flow: `-1` or `1` |

### Usage example

```html
<head>
    <script type="module">
        import { slidy } from 'https://unpkg.com/@slidy/core/dist/index.mjs';;
        import { linear } from 'https://unpkg.com/@slidy/easing/dist/index.mjs';
        import { fade } from 'https://unpkg.com/@slidy/animation/dist/index.mjs';

        const options = {
            index: 0,
            clamp: 0,
            indent: 1,
            sensity: 5,
            gravity: 1.2,
            duration: 375,
            animation: fade,
            easing: linear,
            snap: 'center',
            axis: 'x',
            loop: false,
        };
        
        const node = document.querySelector("#node");
        slidy(node, options);
    </script>
</head>

<section>
    <ul id="node">
        <!-- items -->
    </ul>
</section>
```

[@slidy/easing]: https://github.com/Valexr/Slidy/tree/master/packages/easing
[@slidy/animation]: https://github.com/Valexr/Slidy/tree/master/packages/animation