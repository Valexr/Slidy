## Usage

Easing functions available via named import as `MJS/CJS` module or via global `Window.Slidy` object props as `IIFE`.  
Includes `linear, quad, cubic, quart, quint, bounce, sine, expo, elastic, circ, back` as EaseIn functions.  
More info: https://easings.net.

```ts
/** Easing function.
 * @param t value from 0 to 1
 * @returns value from 0 to 1
 * @default linear
 * @see https://easings.net
 */

type Easing = (t: number) => number;
```


### MJS/CJS module import

```html
<head>
   <script type="module">
        import * as easing from 'https://unpkg.com/@slidy/easing/dist/index.mjs'; // MJS module
        // OR
        import * as easing from 'https://unpkg.com/@slidy/easing/dist/index.cjs'; // CJS module
    </script>
</head>
```

### IIFE as `Window` Object

```html
<head>
    <script src="https://unpkg.com/@slidy/easing"></script>
</head>

<script>
    window.onload = () => easing = Slidy.linear()
</script>
```

### As third party module in any frameworks

```svelte
<!-- Svelte -->

<script>
    import { linear } from '@slidy/easing';

    <Slidy easing={linear} />
</script>
```
